<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ai.aiga</groupId>
	<artifactId>aiga3</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<description>自动化测试系统</description>

	<properties>
		<!-- 主要依赖库的版本定义 -->
		<spring.version>4.3.6.RELEASE</spring.version>
		<jackson.version>2.8.6</jackson.version>
		<mybatis.version>3.4.2</mybatis.version>
		<slf4j.version>1.7.22</slf4j.version>
		<logback.version>1.1.10</logback.version>
		<hibernate.version>4.3.11.Final</hibernate.version>
		<spring-data-jpa.version>1.11.0.RELEASE</spring-data-jpa.version>
		<tomcat-jdbc.version>8.5.9</tomcat-jdbc.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<guava.version>21.0</guava.version>
		<junit.version>4.12</junit.version>
		<mockito.version>2.7.5</mockito.version>

		<!-- Plugin的属性 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.6</java.version>
	</properties>

	<!-- 私库配置, 私库的优先级比中央仓库的优先级高 -->
<!-- 	<repositories>
		<repository>
			<id>zj-crm-repo</id>
			<name>zj crm personal repository</name>
			<url>http://10.70.181.10:8081/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories> -->

	<dependencies>

		<!-- spring -->
		<!-- web 层, 使用spring mvc, 使用spring作为ioc容器.这个大基础不变 -->
		<!-- 换句话说, 以spring作为核心. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.3.6.RELEASE</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.2</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<!-- spring -->
		
		<!-- PERSISTENCE begin -->
		<!-- hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring-data-jpa.version}</version>
		</dependency>
		
		<!-- connection pool -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>${tomcat-jdbc.version}</version>
			<!-- <scope>runtime</scope> -->
		</dependency>
		
		<dependency>
			<groupId>com.asiainfo.jdbc</groupId>
			<artifactId>ojdbc</artifactId>
			<version>6.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/src/lib/ojdbc-6.0.jar</systemPath>
		</dependency>
		
		
		<!-- PERSISTENCE end -->


		<!-- GENERAL UTILS begin -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<!-- GENERAL UTILS end -->

		<!-- JSON begin 使用jackson作为json的转换工具 -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- JSON end -->
		
		

		<!-- 日志, -->
		<!-- LOGGING begin -->
		<!-- slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- logback -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<!-- 代码直接调用log4j会被桥接到slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- 代码直接调用commons-logging会被桥接到slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- 代码直接调用java.util.logging会被桥接到slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- log4jdbc -->
		<dependency>
			<groupId>com.googlecode.log4jdbc</groupId>
			<artifactId>log4jdbc</artifactId>
			<version>1.2</version>
			<scope>runtime</scope>
		</dependency>
		<!-- LOGGING end -->
		
		<!-- TEST begin -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- TEST begin -->
		
	</dependencies>


	<build>
		<finalName>aiga3</finalName>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			
			<!-- Hibernate生成实体配置 -->  
<!-- -->            <plugin>  
                <groupId>org.codehaus.mojo</groupId>  
                <artifactId>hibernate3-maven-plugin</artifactId>  
                <version>2.2</version>  
  
                <dependencies>  
					<dependency>
						<groupId>com.asiainfo.jdbc</groupId>
						<artifactId>ojdbc</artifactId>
						<version>6.0</version>
						<scope>system</scope>
						<systemPath>${project.basedir}/src/lib/ojdbc-6.0.jar</systemPath>
					</dependency> 
                    <dependency>  
                        <groupId>cglib</groupId>  
                        <artifactId>cglib</artifactId>  
                        <version>3.2.4</version>  
                    </dependency>  
                </dependencies>  
  
                <configuration>  
                    <components>  
                        <component>  
                            <name>hbm2java</name>  
                            <outputDirectory>src/main/java</outputDirectory>  
                            <!-- 主要用于反向控制数据库引擎通过JDBC连接数据   -->
                            <implementation>jdbcconfiguration</implementation>  
                        </component>  
                    </components>  
                    <componentProperties>  
                        <!-- Hibernate配置文件   -->
                        <configurationfile>src/test/resources/hibernate.cfg2.xml</configurationfile>
                        <revengfile>src/test/resources/hibernate.reveng2.xml</revengfile>  
                          
                        <!-- 如果设为true将会生成JPA的元素注解
                        使用annotations from javax.persistence and org.hibernate.annotations
                        默认值是false   -->  
                         
                        <ejb3>true</ejb3>
                        
                        <!-- 指明生成java类的包名  --> 
                        <packagename>com.ai.aiga.domain</packagename>  
                    </componentProperties>
                </configuration>  
            </plugin>   
            <!-- Hibernate生成实体配置 --> 

		</plugins>
	</build>
</project>