<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd 
		http://cxf.apache.org/jaxws https://cxf.apache.org/schemas/jaxws.xsd">

	<description>数据库层面的配置 </description>
	
	<!-- 数据源 -->
	<bean id="base" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${base.jdbc.driver}" />
		<property name="url" value="${base.jdbc.url}" />
		<property name="username" value="${base.jdbc.username}" />
		<property name="password" value="${base.jdbc.password}" />

		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${base.jdbc.pool.maxActive}" />
		<property name="maxIdle" value="${base.jdbc.pool.maxIdle}" />
		<property name="testOnBorrow" value="${jdbc.pool.testOnBorrow}" />
		<property name="validationInterval" value="${jdbc.pool.validationInterval}" />
		<property name="validationQuery" value="${jdbc.pool.validationQuery}" />
		<property name="defaultAutoCommit" value="false" />
		<!-- 连接Idle一个小时后超时 -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>
	
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
		<property name="showSql" value="false" />
	</bean>

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="base" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="com.ai.am.domain" />
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<!-- <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.naming.ImprovedNamingStrategyDelegator</prop>  -->
			</props>
		</property>
	</bean>
	
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- 在 Spring 配置文件中启用扫描并自动创建代理的功能 -->
	<!-- 需要在 <beans> 标签中增加对 jpa 命名空间的引用 -->
	<jpa:repositories base-package="com.ai.am.dao" transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory" 
		base-class="com.ai.am.dao.jpa.SearchAndPageRepositoryImpl"/>
	
	<!-- 定义开发的profile -->
    <beans profile="dev">
    	<context:property-placeholder ignore-unresolvable="true" location="classpath*:/dev/jdbc.properties" />
    </beans>

	<!-- 定义测试的profile -->
    <beans profile="qa">
        <context:property-placeholder ignore-unresolvable="true" location="classpath*:/qa/jdbc.properties" />
    </beans>

	<!-- 定义生产的profile -->
    <beans profile="prod">
         <context:property-placeholder ignore-unresolvable="true" location="classpath*:/prod/jdbc.properties" />
    </beans>
	
</beans>
